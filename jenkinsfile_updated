pipeline {
    agent any
    
     tools {
        jdk 'jdk17'
        maven 'maven3'
    }
     environment {
        SCANNER_HOME= tool 'sonar-scanner'
    }


stages{
stage('GIT CHECKOUT') {
steps{

git branch: 'main', url: 'https://github.com/Nizam08/Vivek-s-Gaming-Application/'
}
   
}

stage('MAVEN COMPILE') {
    steps{
        
        sh "mvn compile"
    }
}
stage('MAVEN TEST') {
    steps{
        
        sh "mvn test"
    }
}
 
         stage('TRIVY FILESYSTEM SCAN') {
            steps {
                sh "trivy fs --format table -o trivy-fs-report.html ."
            }
        }
        stage('SONARQUBE ANALYSIS') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Gaming -Dsonar.projectKey=Gaming\
                            -Dsonar.java.binaries=. '''
                }
            }
        }
          stage('QUALITY GATE') {
            steps {
                script {
                  waitForQualityGate abortPipeline: false, credentialsId: 'sonar' 
                }
            }
        }
        stage('MAVEN BUILD') {
            steps {
               sh "mvn package"
            }
        }
        
    stage('BUILD & TAG DOCKER IMAGE') {
    steps {
        script {
            docker.withRegistry('https://index.docker.io/v1/', 'docker-credential') {
                sh "echo your_password | sudo -S docker build -t nizamulhaq/gaming:latest ."
                sh "echo your_password | sudo -S docker push nizamulhaq/gaming:latest"
            }
        }
    }
}

stage('IMAGE SCANNING') {
            steps {
                sh "trivy image --format table -o trivy-image-report.html nizamulhaq/gaming:latest "
            }
        }   
        stage('DOCKER DEPLOYMENT') {
            steps {
                sh "docker run -d -p 8092:8080 nizamulhaq/gaming:latest"
            }
        }   


    
             
    
}
}
